// P3714
// Created by LINwhy on 2022/11/28
// Time 16:38
// 对最近点对进行一定修改即可
#include<iostream>
#include<cmath>
#include<algorithm>
using namespace std;
const int N = 2e5 + 5;
const double INF = 1e20;
int n, T;
struct node {
	double x, y;
	int flag;
	bool operator <(const node& a) const {
		return x < a.x;
	}
}p[N],q[N];

inline double dis(node& a, node& b) {
	return sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));
}

bool cmp(node a, node b) {
	return a.y < b.y;
}

double get_ans(int l, int r) { //进行二分
	if (l == r) return INF;
	int cnt = 0, mid = l + r >> 1;
	double ans = min(get_ans(l, mid), get_ans(mid + 1, r));//获得左边和右边的最短距离
	//将所有可能的复制一下
	for (int i = l; i <= r; i++)
		if (fabs(p[i].x - p[mid].x) <= ans)
			q[++cnt] = p[i];
	sort(q + 1, q + cnt + 1, cmp);
	for (int i = 1; i <= cnt; i++) {
		for (int j = i + 1; j <= cnt; j++) {
			if (q[i].flag == q[j].flag) continue;
			if (q[j].y - q[i].y > ans) break;
			ans = min(ans, dis(q[i], q[j]));
		}
	}
	//得出答案
	return ans;
}

int main() {
	scanf("%d", &T);
	while (T--) {
		scanf("%d", &n);
		for (int i = 1; i <= n; i++) {
			scanf("%lf %lf", &p[i].x, &p[i].y);
			p[i].flag = 0;//表示是发电站
		}
		for (int i = n + 1; i <= 2 * n; i++) {
			scanf("%lf %lf", &p[i].x, &p[i].y);
			p[i].flag = 1;//表示这个是士兵
		}
		sort(p + 1, p + 2 * n + 1);
		double ans = get_ans(1, 2 * n);
		printf("%.3lf\n", ans);
	}
	return 0;
}
