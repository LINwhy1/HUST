// P1753
// Created by LINwhy on 2022/11/16
// Time 23:53
//枚举 搜索
#include<iostream>
using namespace std;
int a[4][4], ans = 1 << 27;
bool in(int x, int y) {
	if (0 <= x && x <= 3 && 0 <= y && y <= 3) return true;
	return false;
}
void adjust(int chess[][4], int x, int y) {
	chess[x][y] ^= 1;
	if (in(x - 1, y)) chess[x - 1][y] ^= 1;
	if (in(x + 1, y)) chess[x + 1][y] ^= 1;
	if (in(x, y - 1)) chess[x][y - 1] ^= 1;
	if (in(x, y + 1)) chess[x][y + 1] ^= 1;
}
bool check(int chess[][4]) {
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++)
			if (chess[i][j] != chess[0][0]) return false;
	}
	return true;
}
void dfs(int chess[][4], int step, int x, int y) {
	if (step >= ans) return;
	if (check(chess)) {
		ans = min(ans, step);
		return;
	}
	if (x == 4) return;
	if (y == 3) dfs(chess, step, x + 1, 0);
	else dfs(chess, step, x, y + 1);
	adjust(chess, x, y);
	if (y == 3) dfs(chess, step + 1, x + 1, 0);
	else dfs(chess, step + 1, x, y + 1);
	adjust(chess, x, y);
}
int main() {
	for(int i=0;i<4;i++)
		for (int j = 0; j < 4; j++) {
			char ch;
			cin >> ch;
			if (ch == 'b') a[i][j] = 0;
			else a[i][j] = 1;
		}
	dfs(a, 0, 0, 0);
	if (ans == 1 << 27) cout << "Impossible";
	else cout << ans;

	return 0;
}
