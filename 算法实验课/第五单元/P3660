// P3660
// Created by LINwhy on 2022/11/18
// Time 20:37
// 算法标签：Floyd算法 + 传递闭包
#include<iostream>
using namespace std;
int d[105][105];
int n, m;
int main() {
	cin >> n >> m;
	for (int i = 1; i <= m; i++) {
		int x, y;
		cin >> x >> y;
		d[x][y] = 1;
	}
	//求出传递闭包
	for (int k = 1; k <= n; k++) {
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= n; j++) {
				d[i][j] |= d[i][k] & d[k][j];
			}
		}
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			if (d[i][j]) d[j][i] = d[i][j] * -1;
		}
	}
	int ans = 0;
	for (int i = 1; i <= n; i++) {
		int cnt = 0;
		for (int j = 1; j <= n; j++) {
			if (d[i][j] == 0) cnt++;
		}
		if (cnt == 1) ans++;
	}
	cout << ans;
	return 0;
}
